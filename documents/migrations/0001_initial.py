# Generated by Django 5.1.7 on 2025-03-21 14:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('order', '0003_purchaseorderitem_currency'),
        ('suppliers', '0005_supplier_default_currency_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Document Type',
                'verbose_name_plural': 'Document Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='documents/%Y/%m/%d/')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('processing_status', models.CharField(choices=[('pending', 'Awaiting Processing'), ('processing', 'Processing'), ('processed', 'Processed'), ('error', 'Error'), ('matched', 'Matched to Order')], default='pending', max_length=20)),
                ('ocr_text', models.TextField(blank=True)),
                ('ocr_data', models.JSONField(blank=True, help_text='Complete OCR data including word coordinates', null=True)),
                ('document_number', models.CharField(blank=True, help_text='Extracted document number', max_length=100)),
                ('document_date', models.DateField(blank=True, null=True)),
                ('extracted_data', models.JSONField(blank=True, help_text='Extracted field data based on template', null=True)),
                ('confidence_score', models.FloatField(default=0.0, help_text='Confidence score of the document matching')),
                ('notes', models.TextField(blank=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('matched_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='delivery_documents', to='order.purchaseorder')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documents', to='suppliers.supplier')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='DocumentProcessingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('level', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('error', 'Error'), ('debug', 'Debug')], default='info', max_length=10)),
                ('message', models.TextField()),
                ('details', models.JSONField(blank=True, null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_logs', to='documents.document')),
            ],
            options={
                'verbose_name': 'Document Processing Log',
                'verbose_name_plural': 'Document Processing Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DocumentTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('header_pattern', models.TextField(blank=True, help_text='Text pattern to identify document header')),
                ('footer_pattern', models.TextField(blank=True, help_text='Text pattern to identify document footer')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_templates', to=settings.AUTH_USER_MODEL)),
                ('reference_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derived_templates', to='documents.document')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_templates', to='suppliers.supplier')),
                ('document_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='documents.documenttype')),
            ],
            options={
                'verbose_name': 'Document Template',
                'verbose_name_plural': 'Document Templates',
                'ordering': ['supplier__name', 'name'],
                'unique_together': {('name', 'supplier', 'document_type')},
            },
        ),
        migrations.CreateModel(
            name='DocumentMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('matched', 'Matched'), ('manual_review', 'Requires Manual Review'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('matched_data', models.JSONField(blank=True, null=True)),
                ('match_date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_attempts', to='documents.document')),
                ('matched_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='document_matches', to=settings.AUTH_USER_MODEL)),
                ('purchase_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='document_matches', to='order.purchaseorder')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_matches', to='documents.documenttemplate')),
            ],
            options={
                'verbose_name': 'Document Match',
                'verbose_name_plural': 'Document Matches',
                'ordering': ['-match_date'],
            },
        ),
        migrations.AddField(
            model_name='document',
            name='matched_template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matched_documents', to='documents.documenttemplate'),
        ),
        migrations.AddField(
            model_name='document',
            name='document_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documents', to='documents.documenttype'),
        ),
        migrations.CreateModel(
            name='TemplateField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(help_text='Unique code for this field in the template', max_length=50)),
                ('field_type', models.CharField(choices=[('text', 'Text'), ('number', 'Number'), ('date', 'Date'), ('currency', 'Currency'), ('boolean', 'Boolean'), ('list', 'List of Items'), ('table', 'Table')], default='text', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('x1', models.FloatField(help_text='Left coordinate')),
                ('y1', models.FloatField(help_text='Top coordinate')),
                ('x2', models.FloatField(help_text='Right coordinate')),
                ('y2', models.FloatField(help_text='Bottom coordinate')),
                ('extraction_method', models.CharField(choices=[('exact', 'Exact Position'), ('label_based', 'Based on Label'), ('relative', 'Relative to Another Field'), ('regex', 'Regular Expression'), ('table_cell', 'Table Cell')], default='exact', max_length=20)),
                ('search_pattern', models.CharField(blank=True, help_text='Label or regex pattern to find the field', max_length=255)),
                ('x_offset', models.IntegerField(default=0, help_text='X offset from reference field')),
                ('y_offset', models.IntegerField(default=0, help_text='Y offset from reference field')),
                ('format_pattern', models.CharField(blank=True, help_text='Format pattern for the extracted value', max_length=255)),
                ('is_table_header', models.BooleanField(default=False)),
                ('table_column_index', models.IntegerField(blank=True, null=True)),
                ('table_row_index', models.IntegerField(blank=True, null=True)),
                ('is_required', models.BooleanField(default=False, help_text='Is this field required for document validation')),
                ('is_key_field', models.BooleanField(default=False, help_text='Is this a key field for document matching')),
                ('validation_regex', models.CharField(blank=True, help_text='Regex pattern for field validation', max_length=255)),
                ('reference_field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dependent_fields', to='documents.templatefield')),
                ('table_parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='table_fields', to='documents.templatefield')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='documents.documenttemplate')),
            ],
            options={
                'verbose_name': 'Template Field',
                'verbose_name_plural': 'Template Fields',
                'ordering': ['template', 'name'],
                'unique_together': {('template', 'code')},
            },
        ),
    ]
