# Generated by Django 5.1.7 on 2025-04-11 22:30

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='documents/%Y/%m/%d/')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('processing_status', models.CharField(
                    choices=[('pending', 'Awaiting Processing'), ('processing', 'Processing'),
                             ('processed', 'Processed'), ('error', 'Error'), ('matched', 'Matched to Order')],
                    default='pending', max_length=20)),
                ('ocr_text', models.TextField(blank=True)),
                ('ocr_data',
                 models.JSONField(blank=True, help_text='Complete OCR data including word coordinates', null=True)),
                (
                'document_number', models.CharField(blank=True, help_text='Extracted document number', max_length=100)),
                ('document_date', models.DateField(blank=True, null=True)),
                ('extracted_data',
                 models.JSONField(blank=True, help_text='Extracted field data based on template', null=True)),
                ('confidence_score',
                 models.FloatField(default=0.0, help_text='Confidence score of the document matching')),
                ('notes', models.TextField(blank=True)),
                ('is_processed', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='DocumentMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('matched', 'Matched'),
                                                     ('manual_review', 'Requires Manual Review'),
                                                     ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('matched_data', models.JSONField(blank=True, null=True)),
                ('match_date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Document Match',
                'verbose_name_plural': 'Document Matches',
                'ordering': ['-match_date'],
            },
        ),
        migrations.CreateModel(
            name='DocumentProcessingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('level', models.CharField(
                    choices=[('info', 'Information'), ('warning', 'Warning'), ('error', 'Error'), ('debug', 'Debug')],
                    default='info', max_length=10)),
                ('message', models.TextField()),
                ('details', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Document Processing Log',
                'verbose_name_plural': 'Document Processing Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DocumentTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('header_pattern', models.TextField(blank=True, help_text='Text pattern to identify document header')),
                ('footer_pattern', models.TextField(blank=True, help_text='Text pattern to identify document footer')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Document Template',
                'verbose_name_plural': 'Document Templates',
                'ordering': ['supplier__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Document Type',
                'verbose_name_plural': 'Document Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StandardField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=100)),
                ('original_code',
                 models.CharField(blank=True, help_text='Original field code used for extraction', max_length=50)),
                ('field_type', models.CharField(
                    choices=[('text', 'Text'), ('number', 'Number'), ('date', 'Date'), ('currency', 'Currency'),
                             ('boolean', 'Boolean'), ('list', 'List of Items'), ('table', 'Table')], default='text',
                    max_length=20)),
                ('extraction_method', models.CharField(
                    choices=[('exact', 'Exact Position'), ('label_based', 'Based on Label'),
                             ('relative', 'Relative to Another Field'), ('regex', 'Regular Expression'),
                             ('table_cell', 'Table Cell')], default='label_based', max_length=20)),
                ('search_pattern',
                 models.CharField(blank=True, help_text='Label or regex pattern to find the field', max_length=255)),
                ('is_key_field', models.BooleanField(default=False)),
                ('is_required', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Sort order for display')),
            ],
            options={
                'verbose_name': 'Standard Field',
                'verbose_name_plural': 'Standard Fields',
                'ordering': ['document_type', 'order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TemplateField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(help_text='Unique code for this field in the template', max_length=50)),
                ('field_type', models.CharField(
                    choices=[('text', 'Text'), ('number', 'Number'), ('date', 'Date'), ('currency', 'Currency'),
                             ('boolean', 'Boolean'), ('list', 'List of Items'), ('table', 'Table')], default='text',
                    max_length=20)),
                ('description', models.TextField(blank=True)),
                ('x1', models.FloatField(help_text='Left coordinate')),
                ('y1', models.FloatField(help_text='Top coordinate')),
                ('x2', models.FloatField(help_text='Right coordinate')),
                ('y2', models.FloatField(help_text='Bottom coordinate')),
                ('extraction_method', models.CharField(
                    choices=[('exact', 'Exact Position'), ('label_based', 'Based on Label'),
                             ('relative', 'Relative to Another Field'), ('regex', 'Regular Expression'),
                             ('table_cell', 'Table Cell')], default='exact', max_length=20)),
                ('search_pattern',
                 models.CharField(blank=True, help_text='Label or regex pattern to find the field', max_length=255)),
                ('x_offset', models.IntegerField(default=0, help_text='X offset from reference field')),
                ('y_offset', models.IntegerField(default=0, help_text='Y offset from reference field')),
                ('format_pattern',
                 models.CharField(blank=True, help_text='Format pattern for the extracted value', max_length=255)),
                ('is_table_header', models.BooleanField(default=False)),
                ('table_column_index', models.IntegerField(blank=True, null=True)),
                ('table_row_index', models.IntegerField(blank=True, null=True)),
                ('is_required',
                 models.BooleanField(default=False, help_text='Is this field required for document validation')),
                ('is_key_field',
                 models.BooleanField(default=False, help_text='Is this a key field for document matching')),
                ('validation_regex',
                 models.CharField(blank=True, help_text='Regex pattern for field validation', max_length=255)),
            ],
            options={
                'verbose_name': 'Template Field',
                'verbose_name_plural': 'Template Fields',
                'ordering': ['template', 'name'],
            },
        ),
    ]
