# Generated by Django 5.1.7 on 2025-04-11 22:30

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('order', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SupplierPerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('metric_type', models.CharField(
                    choices=[('on_time_delivery', 'On-Time Delivery'), ('order_accuracy', 'Order Accuracy'),
                             ('price_consistency', 'Price Consistency'), ('quality', 'Product Quality'),
                             ('responsiveness', 'Responsiveness'), ('custom', 'Custom Metric')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_system', models.BooleanField(default=False, help_text='System metrics cannot be deleted')),
                ('weight', models.IntegerField(default=1, help_text='Weight for calculating composite scores')),
                ('target_value', models.DecimalField(decimal_places=2, default=100.0,
                                                     help_text='Target value in percent (100% is perfect)',
                                                     max_digits=5)),
                ('minimum_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Performance Metric',
                'verbose_name_plural': 'Performance Metrics',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('contact_person',
                 models.CharField(blank=True, help_text='Deprecated - Bitte Kontaktpersonen-Modell verwenden',
                                  max_length=100)),
                ('email', models.EmailField(blank=True, help_text='Deprecated - Bitte Kontaktpersonen-Modell verwenden',
                                            max_length=254)),
                ('phone', models.CharField(blank=True, help_text='Deprecated - Bitte Kontaktpersonen-Modell verwenden',
                                           max_length=20)),
                ('address', models.TextField(blank=True, help_text='Deprecated - Bitte Adressen-Modell verwenden')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('shipping_cost',
                 models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Versandkosten')),
                ('minimum_order_value',
                 models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Mindestbestellwert')),
                ('default_currency',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                   related_name='suppliers', to='core.currency', verbose_name='Standardwährung')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SupplierAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_type', models.CharField(
                    choices=[('billing', 'Rechnungsadresse'), ('shipping', 'Lieferadresse'),
                             ('rma', 'RMA-Rücksendeadresse'), ('warehouse', 'Lageradresse'), ('office', 'Büro'),
                             ('other', 'Sonstige')], default='billing', max_length=20)),
                ('is_default', models.BooleanField(default=False, verbose_name='Standardadresse für diesen Typ')),
                ('name', models.CharField(blank=True, max_length=200, verbose_name='Adressname')),
                ('street', models.CharField(max_length=200, verbose_name='Straße')),
                ('street_number', models.CharField(blank=True, max_length=20, verbose_name='Hausnummer')),
                ('postal_code', models.CharField(max_length=20, verbose_name='PLZ')),
                ('city', models.CharField(max_length=100, verbose_name='Stadt')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='Bundesland/Region')),
                ('country', models.CharField(max_length=100, verbose_name='Land')),
                ('notes', models.TextField(blank=True, verbose_name='Anmerkungen')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses',
                                               to='suppliers.supplier')),
            ],
            options={
                'verbose_name': 'Lieferantenadresse',
                'verbose_name_plural': 'Lieferantenadressen',
                'ordering': ['supplier', 'address_type', '-is_default'],
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_default', True)),
                                                        fields=('supplier', 'address_type', 'is_default'),
                                                        name='unique_default_address_per_type')],
            },
        ),
        migrations.CreateModel(
            name='SupplierContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_type', models.CharField(
                    choices=[('general', 'Allgemeiner Kontakt'), ('sales', 'Vertrieb'), ('support', 'Support'),
                             ('accounting', 'Buchhaltung'), ('rma', 'RMA/Reklamationen'),
                             ('technical', 'Technischer Kontakt'), ('management', 'Geschäftsführung'),
                             ('other', 'Sonstiger Kontakt')], default='general', max_length=20)),
                ('is_default', models.BooleanField(default=False, verbose_name='Standardkontakt für diesen Typ')),
                ('title', models.CharField(blank=True, max_length=50, verbose_name='Titel/Anrede')),
                ('first_name', models.CharField(max_length=100, verbose_name='Vorname')),
                ('last_name', models.CharField(max_length=100, verbose_name='Nachname')),
                ('position', models.CharField(blank=True, max_length=100, verbose_name='Position/Abteilung')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-Mail')),
                ('phone', models.CharField(blank=True, max_length=50, verbose_name='Telefon')),
                ('mobile', models.CharField(blank=True, max_length=50, verbose_name='Mobiltelefon')),
                ('notes', models.TextField(blank=True, verbose_name='Anmerkungen')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts',
                                               to='suppliers.supplier')),
            ],
            options={
                'verbose_name': 'Kontaktperson',
                'verbose_name_plural': 'Kontaktpersonen',
                'ordering': ['supplier', 'contact_type', '-is_default', 'last_name'],
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_default', True)),
                                                        fields=('supplier', 'contact_type', 'is_default'),
                                                        name='unique_default_contact_per_type')],
            },
        ),
        migrations.CreateModel(
            name='SupplierPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value',
                 models.DecimalField(decimal_places=2, help_text='Performance value in percent (100% is perfect)',
                                     max_digits=5)),
                ('evaluation_date', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('evaluation_period_start', models.DateField(blank=True, null=True)),
                ('evaluation_period_end', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('evaluated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                   related_name='supplier_evaluations', to=settings.AUTH_USER_MODEL)),
                ('reference_orders',
                 models.ManyToManyField(blank=True, related_name='performance_evaluations', to='order.purchaseorder')),
                ('supplier',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_records',
                                   to='suppliers.supplier')),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                             to='suppliers.supplierperformancemetric')),
            ],
            options={
                'verbose_name': 'Supplier Performance',
                'verbose_name_plural': 'Supplier Performances',
                'ordering': ['-evaluation_date', 'supplier'],
                'unique_together': {('supplier', 'metric', 'evaluation_date')},
            },
        ),
        migrations.CreateModel(
            name='SupplierProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_sku', models.CharField(blank=True, max_length=50, verbose_name='Supplier SKU')),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('lead_time_days', models.IntegerField(default=7)),
                ('is_preferred', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                               related_name='supplier_products', to='core.currency',
                                               verbose_name='Währung')),
                ('product',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_products',
                                   to='core.product')),
                ('supplier',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_products',
                                   to='suppliers.supplier')),
            ],
            options={
                'ordering': ['supplier', 'product'],
                'unique_together': {('supplier', 'product')},
            },
        ),
    ]
